// Code generated by go-swagger; DO NOT EDIT.

package media

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// StreamsDeleteReader is a Reader for the StreamsDelete structure.
type StreamsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StreamsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewStreamsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStreamsDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStreamsDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStreamsDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewStreamsDeleteMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewStreamsDeleteNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 408:
		result := NewStreamsDeleteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStreamsDeleteNoContent creates a StreamsDeleteNoContent with default headers values
func NewStreamsDeleteNoContent() *StreamsDeleteNoContent {
	return &StreamsDeleteNoContent{}
}

/*StreamsDeleteNoContent handles this case with default header values.

No Content
*/
type StreamsDeleteNoContent struct {
}

func (o *StreamsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteNoContent ", 204)
}

func (o *StreamsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStreamsDeleteBadRequest creates a StreamsDeleteBadRequest with default headers values
func NewStreamsDeleteBadRequest() *StreamsDeleteBadRequest {
	return &StreamsDeleteBadRequest{}
}

/*StreamsDeleteBadRequest handles this case with default header values.

Invalid input
*/
type StreamsDeleteBadRequest struct {
	Payload *StreamsDeleteBadRequestBody
}

func (o *StreamsDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *StreamsDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StreamsDeleteBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamsDeleteForbidden creates a StreamsDeleteForbidden with default headers values
func NewStreamsDeleteForbidden() *StreamsDeleteForbidden {
	return &StreamsDeleteForbidden{}
}

/*StreamsDeleteForbidden handles this case with default header values.

Forbidden(不正な操作を行った場合)
*/
type StreamsDeleteForbidden struct {
}

func (o *StreamsDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteForbidden ", 403)
}

func (o *StreamsDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStreamsDeleteNotFound creates a StreamsDeleteNotFound with default headers values
func NewStreamsDeleteNotFound() *StreamsDeleteNotFound {
	return &StreamsDeleteNotFound{}
}

/*StreamsDeleteNotFound handles this case with default header values.

Not Found(media_idが間違っている場合)
*/
type StreamsDeleteNotFound struct {
}

func (o *StreamsDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteNotFound ", 404)
}

func (o *StreamsDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStreamsDeleteMethodNotAllowed creates a StreamsDeleteMethodNotAllowed with default headers values
func NewStreamsDeleteMethodNotAllowed() *StreamsDeleteMethodNotAllowed {
	return &StreamsDeleteMethodNotAllowed{}
}

/*StreamsDeleteMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type StreamsDeleteMethodNotAllowed struct {
}

func (o *StreamsDeleteMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteMethodNotAllowed ", 405)
}

func (o *StreamsDeleteMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStreamsDeleteNotAcceptable creates a StreamsDeleteNotAcceptable with default headers values
func NewStreamsDeleteNotAcceptable() *StreamsDeleteNotAcceptable {
	return &StreamsDeleteNotAcceptable{}
}

/*StreamsDeleteNotAcceptable handles this case with default header values.

Not Acceptable
*/
type StreamsDeleteNotAcceptable struct {
}

func (o *StreamsDeleteNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteNotAcceptable ", 406)
}

func (o *StreamsDeleteNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStreamsDeleteRequestTimeout creates a StreamsDeleteRequestTimeout with default headers values
func NewStreamsDeleteRequestTimeout() *StreamsDeleteRequestTimeout {
	return &StreamsDeleteRequestTimeout{}
}

/*StreamsDeleteRequestTimeout handles this case with default header values.

Request Timeout
*/
type StreamsDeleteRequestTimeout struct {
}

func (o *StreamsDeleteRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /media/{media_id}][%d] streamsDeleteRequestTimeout ", 408)
}

func (o *StreamsDeleteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*StreamsDeleteBadRequestBody streams delete bad request body
swagger:model StreamsDeleteBadRequestBody
*/
type StreamsDeleteBadRequestBody struct {

	// command type
	// Required: true
	CommandType *string `json:"command_type"`

	// params
	// Required: true
	Params *StreamsDeleteBadRequestBodyParams `json:"params"`
}

// Validate validates this streams delete bad request body
func (o *StreamsDeleteBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCommandType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StreamsDeleteBadRequestBody) validateCommandType(formats strfmt.Registry) error {

	if err := validate.Required("streamsDeleteBadRequest"+"."+"command_type", "body", o.CommandType); err != nil {
		return err
	}

	return nil
}

func (o *StreamsDeleteBadRequestBody) validateParams(formats strfmt.Registry) error {

	if err := validate.Required("streamsDeleteBadRequest"+"."+"params", "body", o.Params); err != nil {
		return err
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("streamsDeleteBadRequest" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StreamsDeleteBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StreamsDeleteBadRequestBody) UnmarshalBinary(b []byte) error {
	var res StreamsDeleteBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*StreamsDeleteBadRequestBodyParams streams delete bad request body params
swagger:model StreamsDeleteBadRequestBodyParams
*/
type StreamsDeleteBadRequestBodyParams struct {

	// errors
	// Required: true
	Errors []*StreamsDeleteBadRequestBodyParamsErrorsItems0 `json:"errors"`
}

// Validate validates this streams delete bad request body params
func (o *StreamsDeleteBadRequestBodyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StreamsDeleteBadRequestBodyParams) validateErrors(formats strfmt.Registry) error {

	if err := validate.Required("streamsDeleteBadRequest"+"."+"params"+"."+"errors", "body", o.Errors); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("streamsDeleteBadRequest" + "." + "params" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *StreamsDeleteBadRequestBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StreamsDeleteBadRequestBodyParams) UnmarshalBinary(b []byte) error {
	var res StreamsDeleteBadRequestBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*StreamsDeleteBadRequestBodyParamsErrorsItems0 streams delete bad request body params errors items0
swagger:model StreamsDeleteBadRequestBodyParamsErrorsItems0
*/
type StreamsDeleteBadRequestBodyParamsErrorsItems0 struct {

	// field
	Field string `json:"field,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this streams delete bad request body params errors items0
func (o *StreamsDeleteBadRequestBodyParamsErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StreamsDeleteBadRequestBodyParamsErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StreamsDeleteBadRequestBodyParamsErrorsItems0) UnmarshalBinary(b []byte) error {
	var res StreamsDeleteBadRequestBodyParamsErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
