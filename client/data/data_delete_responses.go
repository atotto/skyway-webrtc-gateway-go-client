// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// DataDeleteReader is a Reader for the DataDelete structure.
type DataDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DataDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDataDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDataDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDataDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDataDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDataDeleteMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewDataDeleteNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 408:
		result := NewDataDeleteRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDataDeleteNoContent creates a DataDeleteNoContent with default headers values
func NewDataDeleteNoContent() *DataDeleteNoContent {
	return &DataDeleteNoContent{}
}

/*DataDeleteNoContent handles this case with default header values.

No Content
*/
type DataDeleteNoContent struct {
}

func (o *DataDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteNoContent ", 204)
}

func (o *DataDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataDeleteBadRequest creates a DataDeleteBadRequest with default headers values
func NewDataDeleteBadRequest() *DataDeleteBadRequest {
	return &DataDeleteBadRequest{}
}

/*DataDeleteBadRequest handles this case with default header values.

Invalid input
*/
type DataDeleteBadRequest struct {
	Payload *DataDeleteBadRequestBody
}

func (o *DataDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *DataDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DataDeleteBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDataDeleteForbidden creates a DataDeleteForbidden with default headers values
func NewDataDeleteForbidden() *DataDeleteForbidden {
	return &DataDeleteForbidden{}
}

/*DataDeleteForbidden handles this case with default header values.

Forbidden(不正な操作を行った場合)
*/
type DataDeleteForbidden struct {
}

func (o *DataDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteForbidden ", 403)
}

func (o *DataDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataDeleteNotFound creates a DataDeleteNotFound with default headers values
func NewDataDeleteNotFound() *DataDeleteNotFound {
	return &DataDeleteNotFound{}
}

/*DataDeleteNotFound handles this case with default header values.

Not Found(data_connection_idが間違っている場合)
*/
type DataDeleteNotFound struct {
}

func (o *DataDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteNotFound ", 404)
}

func (o *DataDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataDeleteMethodNotAllowed creates a DataDeleteMethodNotAllowed with default headers values
func NewDataDeleteMethodNotAllowed() *DataDeleteMethodNotAllowed {
	return &DataDeleteMethodNotAllowed{}
}

/*DataDeleteMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type DataDeleteMethodNotAllowed struct {
}

func (o *DataDeleteMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteMethodNotAllowed ", 405)
}

func (o *DataDeleteMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataDeleteNotAcceptable creates a DataDeleteNotAcceptable with default headers values
func NewDataDeleteNotAcceptable() *DataDeleteNotAcceptable {
	return &DataDeleteNotAcceptable{}
}

/*DataDeleteNotAcceptable handles this case with default header values.

Not Acceptable
*/
type DataDeleteNotAcceptable struct {
}

func (o *DataDeleteNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteNotAcceptable ", 406)
}

func (o *DataDeleteNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataDeleteRequestTimeout creates a DataDeleteRequestTimeout with default headers values
func NewDataDeleteRequestTimeout() *DataDeleteRequestTimeout {
	return &DataDeleteRequestTimeout{}
}

/*DataDeleteRequestTimeout handles this case with default header values.

Request Timeout
*/
type DataDeleteRequestTimeout struct {
}

func (o *DataDeleteRequestTimeout) Error() string {
	return fmt.Sprintf("[DELETE /data/{data_id}][%d] dataDeleteRequestTimeout ", 408)
}

func (o *DataDeleteRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DataDeleteBadRequestBody data delete bad request body
swagger:model DataDeleteBadRequestBody
*/
type DataDeleteBadRequestBody struct {

	// command type
	// Required: true
	CommandType *string `json:"command_type"`

	// params
	// Required: true
	Params *DataDeleteBadRequestBodyParams `json:"params"`
}

// Validate validates this data delete bad request body
func (o *DataDeleteBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCommandType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DataDeleteBadRequestBody) validateCommandType(formats strfmt.Registry) error {

	if err := validate.Required("dataDeleteBadRequest"+"."+"command_type", "body", o.CommandType); err != nil {
		return err
	}

	return nil
}

func (o *DataDeleteBadRequestBody) validateParams(formats strfmt.Registry) error {

	if err := validate.Required("dataDeleteBadRequest"+"."+"params", "body", o.Params); err != nil {
		return err
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dataDeleteBadRequest" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DataDeleteBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DataDeleteBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DataDeleteBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DataDeleteBadRequestBodyParams data delete bad request body params
swagger:model DataDeleteBadRequestBodyParams
*/
type DataDeleteBadRequestBodyParams struct {

	// errors
	// Required: true
	Errors []*DataDeleteBadRequestBodyParamsErrorsItems0 `json:"errors"`
}

// Validate validates this data delete bad request body params
func (o *DataDeleteBadRequestBodyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DataDeleteBadRequestBodyParams) validateErrors(formats strfmt.Registry) error {

	if err := validate.Required("dataDeleteBadRequest"+"."+"params"+"."+"errors", "body", o.Errors); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("dataDeleteBadRequest" + "." + "params" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DataDeleteBadRequestBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DataDeleteBadRequestBodyParams) UnmarshalBinary(b []byte) error {
	var res DataDeleteBadRequestBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DataDeleteBadRequestBodyParamsErrorsItems0 data delete bad request body params errors items0
swagger:model DataDeleteBadRequestBodyParamsErrorsItems0
*/
type DataDeleteBadRequestBodyParamsErrorsItems0 struct {

	// field
	Field string `json:"field,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this data delete bad request body params errors items0
func (o *DataDeleteBadRequestBodyParamsErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DataDeleteBadRequestBodyParamsErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DataDeleteBadRequestBodyParamsErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DataDeleteBadRequestBodyParamsErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
