// Code generated by go-swagger; DO NOT EDIT.

package data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/atotto/skyway-webrtc-gateway-go-client/models"
)

// DataConnectionsCreateReader is a Reader for the DataConnectionsCreate structure.
type DataConnectionsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DataConnectionsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 202:
		result := NewDataConnectionsCreateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDataConnectionsCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDataConnectionsCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDataConnectionsCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewDataConnectionsCreateMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewDataConnectionsCreateNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 408:
		result := NewDataConnectionsCreateRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDataConnectionsCreateAccepted creates a DataConnectionsCreateAccepted with default headers values
func NewDataConnectionsCreateAccepted() *DataConnectionsCreateAccepted {
	return &DataConnectionsCreateAccepted{}
}

/*DataConnectionsCreateAccepted handles this case with default header values.

Accepted
*/
type DataConnectionsCreateAccepted struct {
	Payload *models.PeerConnectResponse
}

func (o *DataConnectionsCreateAccepted) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateAccepted  %+v", 202, o.Payload)
}

func (o *DataConnectionsCreateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PeerConnectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDataConnectionsCreateBadRequest creates a DataConnectionsCreateBadRequest with default headers values
func NewDataConnectionsCreateBadRequest() *DataConnectionsCreateBadRequest {
	return &DataConnectionsCreateBadRequest{}
}

/*DataConnectionsCreateBadRequest handles this case with default header values.

Invalid input
*/
type DataConnectionsCreateBadRequest struct {
	Payload *DataConnectionsCreateBadRequestBody
}

func (o *DataConnectionsCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *DataConnectionsCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DataConnectionsCreateBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDataConnectionsCreateForbidden creates a DataConnectionsCreateForbidden with default headers values
func NewDataConnectionsCreateForbidden() *DataConnectionsCreateForbidden {
	return &DataConnectionsCreateForbidden{}
}

/*DataConnectionsCreateForbidden handles this case with default header values.

Forbidden(不正な操作を行った場合)
*/
type DataConnectionsCreateForbidden struct {
}

func (o *DataConnectionsCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateForbidden ", 403)
}

func (o *DataConnectionsCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataConnectionsCreateNotFound creates a DataConnectionsCreateNotFound with default headers values
func NewDataConnectionsCreateNotFound() *DataConnectionsCreateNotFound {
	return &DataConnectionsCreateNotFound{}
}

/*DataConnectionsCreateNotFound handles this case with default header values.

Not Found(peer_idが間違っている場合)
*/
type DataConnectionsCreateNotFound struct {
}

func (o *DataConnectionsCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateNotFound ", 404)
}

func (o *DataConnectionsCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataConnectionsCreateMethodNotAllowed creates a DataConnectionsCreateMethodNotAllowed with default headers values
func NewDataConnectionsCreateMethodNotAllowed() *DataConnectionsCreateMethodNotAllowed {
	return &DataConnectionsCreateMethodNotAllowed{}
}

/*DataConnectionsCreateMethodNotAllowed handles this case with default header values.

Method Not Allowed
*/
type DataConnectionsCreateMethodNotAllowed struct {
}

func (o *DataConnectionsCreateMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateMethodNotAllowed ", 405)
}

func (o *DataConnectionsCreateMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataConnectionsCreateNotAcceptable creates a DataConnectionsCreateNotAcceptable with default headers values
func NewDataConnectionsCreateNotAcceptable() *DataConnectionsCreateNotAcceptable {
	return &DataConnectionsCreateNotAcceptable{}
}

/*DataConnectionsCreateNotAcceptable handles this case with default header values.

Not Acceptable
*/
type DataConnectionsCreateNotAcceptable struct {
}

func (o *DataConnectionsCreateNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateNotAcceptable ", 406)
}

func (o *DataConnectionsCreateNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDataConnectionsCreateRequestTimeout creates a DataConnectionsCreateRequestTimeout with default headers values
func NewDataConnectionsCreateRequestTimeout() *DataConnectionsCreateRequestTimeout {
	return &DataConnectionsCreateRequestTimeout{}
}

/*DataConnectionsCreateRequestTimeout handles this case with default header values.

Request Timeout
*/
type DataConnectionsCreateRequestTimeout struct {
}

func (o *DataConnectionsCreateRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /data/connections][%d] dataConnectionsCreateRequestTimeout ", 408)
}

func (o *DataConnectionsCreateRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*DataConnectionsCreateBadRequestBody data connections create bad request body
swagger:model DataConnectionsCreateBadRequestBody
*/
type DataConnectionsCreateBadRequestBody struct {

	// command type
	// Required: true
	CommandType *string `json:"command_type"`

	// params
	// Required: true
	Params *DataConnectionsCreateBadRequestBodyParams `json:"params"`
}

// Validate validates this data connections create bad request body
func (o *DataConnectionsCreateBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCommandType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DataConnectionsCreateBadRequestBody) validateCommandType(formats strfmt.Registry) error {

	if err := validate.Required("dataConnectionsCreateBadRequest"+"."+"command_type", "body", o.CommandType); err != nil {
		return err
	}

	return nil
}

func (o *DataConnectionsCreateBadRequestBody) validateParams(formats strfmt.Registry) error {

	if err := validate.Required("dataConnectionsCreateBadRequest"+"."+"params", "body", o.Params); err != nil {
		return err
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dataConnectionsCreateBadRequest" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DataConnectionsCreateBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DataConnectionsCreateBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DataConnectionsCreateBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DataConnectionsCreateBadRequestBodyParams data connections create bad request body params
swagger:model DataConnectionsCreateBadRequestBodyParams
*/
type DataConnectionsCreateBadRequestBodyParams struct {

	// errors
	// Required: true
	Errors []*DataConnectionsCreateBadRequestBodyParamsErrorsItems0 `json:"errors"`
}

// Validate validates this data connections create bad request body params
func (o *DataConnectionsCreateBadRequestBodyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DataConnectionsCreateBadRequestBodyParams) validateErrors(formats strfmt.Registry) error {

	if err := validate.Required("dataConnectionsCreateBadRequest"+"."+"params"+"."+"errors", "body", o.Errors); err != nil {
		return err
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("dataConnectionsCreateBadRequest" + "." + "params" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DataConnectionsCreateBadRequestBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DataConnectionsCreateBadRequestBodyParams) UnmarshalBinary(b []byte) error {
	var res DataConnectionsCreateBadRequestBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DataConnectionsCreateBadRequestBodyParamsErrorsItems0 data connections create bad request body params errors items0
swagger:model DataConnectionsCreateBadRequestBodyParamsErrorsItems0
*/
type DataConnectionsCreateBadRequestBodyParamsErrorsItems0 struct {

	// field
	Field string `json:"field,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this data connections create bad request body params errors items0
func (o *DataConnectionsCreateBadRequestBodyParamsErrorsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DataConnectionsCreateBadRequestBodyParamsErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DataConnectionsCreateBadRequestBodyParamsErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DataConnectionsCreateBadRequestBodyParamsErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
