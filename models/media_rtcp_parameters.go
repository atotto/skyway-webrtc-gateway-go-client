// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MediaRtcpParameters media rtcp parameters
// swagger:model MediaRtcpParameters
type MediaRtcpParameters struct {

	// RTCPを待ち受けるIPv4アドレスです。ip_v4もしくはip_v6のいずれかは必須です
	IPV4 string `json:"ip_v4,omitempty"`

	// RTCPを待ち受けるIPv6アドレスです。ip_v4もしくはip_v6のいずれかは必須です
	IPV6 string `json:"ip_v6,omitempty"`

	// RTCPを待ち受けるポート番号です
	// Required: true
	Port *uint16 `json:"port"`

	// RTCP送信先を特定するためのIDです
	// Required: true
	RtcpID *string `json:"rtcp_id"`
}

// Validate validates this media rtcp parameters
func (m *MediaRtcpParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePort(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRtcpID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MediaRtcpParameters) validatePort(formats strfmt.Registry) error {

	if err := validate.Required("port", "body", m.Port); err != nil {
		return err
	}

	return nil
}

func (m *MediaRtcpParameters) validateRtcpID(formats strfmt.Registry) error {

	if err := validate.Required("rtcp_id", "body", m.RtcpID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MediaRtcpParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MediaRtcpParameters) UnmarshalBinary(b []byte) error {
	var res MediaRtcpParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
