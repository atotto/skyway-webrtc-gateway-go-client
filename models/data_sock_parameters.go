// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DataSockParameters data sock parameters
// swagger:model DataSockParameters
type DataSockParameters struct {

	// Dataを特定するためのIDです
	// Required: true
	DataID *string `json:"data_id"`

	// Dataを待ち受けるIPv4アドレスです
	IPV4 string `json:"ip_v4,omitempty"`

	// Dataを待ち受けるIPv6アドレスです
	IPV6 string `json:"ip_v6,omitempty"`

	// Dataを待ち受けるポート番号です
	// Required: true
	Port *uint16 `json:"port"`
}

// Validate validates this data sock parameters
func (m *DataSockParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDataID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePort(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DataSockParameters) validateDataID(formats strfmt.Registry) error {

	if err := validate.Required("data_id", "body", m.DataID); err != nil {
		return err
	}

	return nil
}

func (m *DataSockParameters) validatePort(formats strfmt.Registry) error {

	if err := validate.Required("port", "body", m.Port); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DataSockParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataSockParameters) UnmarshalBinary(b []byte) error {
	var res DataSockParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
